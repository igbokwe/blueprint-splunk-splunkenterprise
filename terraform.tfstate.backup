{
  "version": 4,
  "terraform_version": "0.12.25",
  "serial": 158,
  "lineage": "37106ca7-a53f-b96a-c889-24c4966bd951",
  "outputs": {
    "indexer_cluster_hec_token": {
      "value": "5086ab99-6210-4b24-bf8c-c47723229722",
      "type": "string"
    },
    "indexer_cluster_hec_url": {
      "value": "http://34.107.168.220:8080",
      "type": "string"
    },
    "indexer_cluster_master_url": {
      "value": "https://35.226.115.36:8000",
      "type": "string"
    },
    "search_head_cluster_url": {
      "value": "http://35.190.85.97",
      "type": "string"
    },
    "search_head_deployer_url": {
      "value": "https://104.154.114.254:8000",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.shell_output_install_progress",
      "mode": "data",
      "type": "external",
      "name": "exitstatus",
      "provider": "module.shell_output_install_progress.provider.external",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "-",
            "program": [
              "sh",
              ".terraform/modules/shell_output_install_progress/terraform-shell-resource-0.12.0/read.sh",
              ".terraform/modules/shell_output_install_progress/terraform-shell-resource-0.12.0/exitstatus.1944006086828605583"
            ],
            "query": null,
            "result": {
              "content": "0"
            },
            "working_dir": null
          }
        }
      ]
    },
    {
      "module": "module.shell_output_token",
      "mode": "data",
      "type": "external",
      "name": "exitstatus",
      "provider": "module.shell_output_token.provider.external",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "-",
            "program": [
              "sh",
              ".terraform/modules/shell_output_token/terraform-shell-resource-0.12.0/read.sh",
              ".terraform/modules/shell_output_token/terraform-shell-resource-0.12.0/exitstatus.1944006086828605583"
            ],
            "query": null,
            "result": {
              "content": "0"
            },
            "working_dir": null
          }
        }
      ]
    },
    {
      "module": "module.shell_output_install_progress",
      "mode": "data",
      "type": "external",
      "name": "stderr",
      "provider": "module.shell_output_install_progress.provider.external",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "-",
            "program": [
              "sh",
              ".terraform/modules/shell_output_install_progress/terraform-shell-resource-0.12.0/read.sh",
              ".terraform/modules/shell_output_install_progress/terraform-shell-resource-0.12.0/stderr.1944006086828605583"
            ],
            "query": null,
            "result": {
              "content": "Updated [https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-b/instances/splunk-idx-z67d]. Updated [https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-c/instances/splunk-cluster-master]. Updated [https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-c/instances/splunk-deployer]. Updated [https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-c/instances/splunk-idx-b2rc]. Updated [https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-f/instances/splunk-idx-b8bp]."
            },
            "working_dir": null
          }
        }
      ]
    },
    {
      "module": "module.shell_output_token",
      "mode": "data",
      "type": "external",
      "name": "stderr",
      "provider": "module.shell_output_token.provider.external",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "-",
            "program": [
              "sh",
              ".terraform/modules/shell_output_token/terraform-shell-resource-0.12.0/read.sh",
              ".terraform/modules/shell_output_token/terraform-shell-resource-0.12.0/stderr.1944006086828605583"
            ],
            "query": null,
            "result": {
              "content": ""
            },
            "working_dir": null
          }
        }
      ]
    },
    {
      "module": "module.shell_output_install_progress",
      "mode": "data",
      "type": "external",
      "name": "stdout",
      "provider": "module.shell_output_install_progress.provider.external",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "-",
            "program": [
              "sh",
              ".terraform/modules/shell_output_install_progress/terraform-shell-resource-0.12.0/read.sh",
              ".terraform/modules/shell_output_install_progress/terraform-shell-resource-0.12.0/stdout.1944006086828605583"
            ],
            "query": null,
            "result": {
              "content": ""
            },
            "working_dir": null
          }
        }
      ]
    },
    {
      "module": "module.shell_output_token",
      "mode": "data",
      "type": "external",
      "name": "stdout",
      "provider": "module.shell_output_token.provider.external",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "-",
            "program": [
              "sh",
              ".terraform/modules/shell_output_token/terraform-shell-resource-0.12.0/read.sh",
              ".terraform/modules/shell_output_token/terraform-shell-resource-0.12.0/stdout.1944006086828605583"
            ],
            "query": null,
            "result": {
              "content": "5086ab99-6210-4b24-bf8c-c47723229722"
            },
            "working_dir": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "google_compute_zones",
      "name": "available",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2020-06-26 03:07:29.462623314 +0000 UTC",
            "names": [
              "us-central1-a",
              "us-central1-b",
              "us-central1-c",
              "us-central1-f"
            ],
            "project": "igbokwe-test",
            "region": "us-central1",
            "status": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "splunk_startup_script",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "77c35502139a773c430a48b8909dc3c64373b04f1732e10911d226afe0849097",
            "rendered": "#!/bin/bash\n#\n# Copyright 2019 Google LLC\n# \n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n# \n#     https://www.apache.org/licenses/LICENSE-2.0\n# \n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -e\nset -x\n\nlog() { \n  echo \"`date`: $1\"; \n  curl -X PUT --data \"$1\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install-status -H \"Metadata-Flavor: Google\"\n}\n\nexport SPLUNK_USER=splunk\nexport SPLUNK_BIN=/opt/splunk/bin/splunk\nexport SPLUNK_HOME=/opt/splunk\nexport SPLUNK_ROLE=\"$(curl http://metadata.google.internal/computeMetadata/v1/instance/attributes/splunk-role -H \"Metadata-Flavor: Google\")\"\nexport LOCAL_IP=\"$(curl http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip -H \"Metadata-Flavor: Google\")\"\n\ncurl -X PUT --data \"in-progress\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install -H \"Metadata-Flavor: Google\"\n\nexport DATA_DRIVES=`ls /dev/sd* | egrep -v '^/dev/sda[0-9]*'`\nif [[ $DATA_DRIVES != \"\" ]]; then \\\n  log \"Found data disks - configuring\"\n  pvcreate $DATA_DRIVES\n  vgcreate splunk_data $DATA_DRIVES\n  lvcreate -n splunk_volume -i `echo $DATA_DRIVES | wc -l` -l 100%FREE splunk_data\n  mkfs.ext4 /dev/splunk_data/splunk_volume\n  mkdir -p /opt\n  cat \u003e\u003e/etc/fstab \u003c\u003cend\n/dev/splunk_data/splunk_volume /opt ext4 defaults 0 0\nend\n  mount /dev/splunk_data/splunk_volume\nfi\n\nlog \"Downloading and installing\"\n# Download \u0026 install Splunk Enterprise\nif [ ! -d \"$SPLUNK_HOME\" ]; then \n  wget -O splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz \"http://download.splunk.com/products/splunk/releases/8.0.0/linux/splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\"\n  tar zxf splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\n  mv splunk $SPLUNK_HOME\n  rm splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\nfi\n\nlog \"Creating user and intial Splunk configurations\"\n# Create Splunk system user, and set directory permissions\nif ! id $SPLUNK_USER \u003e/dev/null 2\u003e\u00261; then\n  useradd -r -m -s /bin/bash -U $SPLUNK_USER\nfi\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME\n\n# Work around for having to pass admin pass\ncd ~\nmkdir .splunk\nchmod 777 -R .splunk\ntouch .splunk/authToken_hostname_port\nchmod 600 .splunk/authToken_hostname_port\ncd $SPLUNK_HOME\n\n\n# Set Splunk admin password and disable first-time run password prompt\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/user-seed.conf \u003c\u003cend\n[user_info]\nUSERNAME = admin\nPASSWORD = emekaigbokwe\nend\ntouch $SPLUNK_HOME/etc/.ui_login\n\n# Configure systemd to start Splunk at boot\ncd /opt/splunk\nbin/splunk enable boot-start -user $SPLUNK_USER --accept-license -systemd-managed 0\n\n# Configure Splunk before starting service\n# Increase splunkweb connection timeout with splunkd\nmkdir -p $SPLUNK_HOME/etc/apps/base-autogenerated/local\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/web.conf \u003c\u003cend\n[settings]\nsplunkdConnectionTimeout = 300\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\nlog \"Starting Splunk Service\"\n# Start Splunk service\nsudo /etc/init.d/splunk start\n\n# Allow for Splunk start-up time\nsleep 10\n\nif [ $SPLUNK_ROLE = \"IDX-Master\" ]; then\nlog \"Cluster Master configuration\"\n\n# Change default to HTTPS on the web interface\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/web.conf \u003c\u003cend\n[settings]\nenableSplunkWebSSL = 1\nend\n\n# Forward to indexer cluster using indexer discovery\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://127.0.0.1:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\nsudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe'\nsudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode master -replication_factor 3 -search_factor 2 -secret 'emekaigbokwe' -cluster_label Splunk-IDX\n\n# Configure indexer discovery - pass4SymmKey doesn't get hashed\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/server.conf \u003c\u003cend\n\n[indexer_discovery]\npass4SymmKey = emekaigbokwe\nindexerWeightByDiskCapacity = true\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local/server.conf\n\n# Add base configs for peer nodes as an app under master-apps\n# Peer config 1: Enable HEC input\nsudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector enable -uri https://localhost:8089 -auth admin:'emekaigbokwe'\nsudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector create default-token -uri https://localhost:8089 -auth admin:'emekaigbokwe' \u003e /tmp/token\nTOKEN=`sed -n 's/\\\\ttoken=//p' /tmp/token`\nrm /tmp/token\nlog \"Setting HEC Token as guest attribute\"\ncurl -X PUT --data \"$TOKEN\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/token -H \"Metadata-Flavor: Google\"\n\nmkdir -p $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local\nmv $SPLUNK_HOME/etc/apps/splunk_httpinput/local/inputs.conf $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local\n# Peer config 2: Enable splunktcp input\ncat \u003e\u003e$SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local/inputs.conf \u003c\u003cend\n\n[splunktcp://9997]\ndisabled=0\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/master-apps\n\nelse\n# Link up with License Master\n# TODO: Add following when enterprise license installed on cluster master\n#sudo -u $SPLUNK_USER $SPLUNK_BIN edit licenser-localslave -master_uri https://192.168.0.2:8089 -auth admin:'emekaigbokwe'\nlog \"Skip license master link up\" \nfi\n\nif [ $SPLUNK_ROLE = \"SHC-Deployer\" ]; then\nlog \"Deployer configurations\"\n\n# Change default to HTTPS on the web interface\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/web.conf \u003c\u003cend\n[settings]\nenableSplunkWebSSL = 1\nend\n\n# Configure some SHC parameters\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/server.conf \u003c\u003cend\n\n[shclustering]\npass4SymmKey = emekaigbokwe\nshcluster_label = SplunkSHC\nend\n\n# Forward to indexer cluster using indexer discovery\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing on the search head\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://192.168.0.2:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\n# Add base config for search head cluster members\nmkdir -p $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local\ncat \u003e\u003e$SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing on the search head\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://192.168.0.2:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated\n\nsudo -u $SPLUNK_USER $SPLUNK_BIN apply shcluster-bundle -action stage --answer-yes -auth admin:'emekaigbokwe'\n# TODO: send bundle after SHC is initialized with captain bootstrapped\n\n\nelif [ $SPLUNK_ROLE = \"SHC-Member\" ]; then\n  log \"Search Head Member configurations\"\n  # Configure some SHC parameters\n  cat \u003e\u003e$SPLUNK_HOME/etc/system/local/server.conf \u003c\u003cend\n[shclustering]\nregister_replication_address = $LOCAL_IP\nend\n  chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local\n  log \"Setting cluster config and connecting to master\"\n  # Sometimes the master is restarting at the same time, retry up to 5 times\n  command=\"sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe' \u0026\u0026 \\\n  sudo -u $SPLUNK_USER $SPLUNK_BIN init shcluster-config -mgmt_uri https://$LOCAL_IP:8089 -replication_port 8090 -replication_factor 2 -conf_deploy_fetch_url https://192.168.0.3:8089 -shcluster_label Splunk-SHC -secret 'emekaigbokwe' \u0026\u0026 \\\n  sudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode searchhead -master_uri https://192.168.0.2:8089 -secret 'emekaigbokwe'\"\n  count=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\nelif [ $SPLUNK_ROLE = \"IDX-Peer\" ]; then\n\nlog \"Setting cluster config and connecting to master\"\n# Sometimes the master is restarting at the same time, retry up to 5 times\ncommand=\"sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe' \u0026\u0026 \\\nsudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode slave -master_uri https://192.168.0.2:8089 -replication_port 9887 -secret 'emekaigbokwe'\"\ncount=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\n\nfi\n\n# Removing temporary permissive .splunk directory\ncd ~\nrm -Rf .splunk\n\nlog \"Final restart of services\"\n# Start Splunk service - changed with 8.0.0 - sometimes it gets an error connecting to it's local web server\ncommand=\"/etc/init.d/splunk restart\"\ncount=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\n\n# Add guest attribute indicating the install process has successfully completed\ncurl -X PUT --data \"complete\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install -H \"Metadata-Flavor: Google\"\nlog \"Finished setup on $HOSTNAME with role $SPLUNK_ROLE\"\n\nexit 0\n",
            "template": "#!/bin/bash\n#\n# Copyright 2019 Google LLC\n# \n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n# \n#     https://www.apache.org/licenses/LICENSE-2.0\n# \n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -e\nset -x\n\nlog() { \n  echo \"`date`: $1\"; \n  curl -X PUT --data \"$1\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install-status -H \"Metadata-Flavor: Google\"\n}\n\nexport SPLUNK_USER=splunk\nexport SPLUNK_BIN=/opt/splunk/bin/splunk\nexport SPLUNK_HOME=/opt/splunk\nexport SPLUNK_ROLE=\"$(curl http://metadata.google.internal/computeMetadata/v1/instance/attributes/splunk-role -H \"Metadata-Flavor: Google\")\"\nexport LOCAL_IP=\"$(curl http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip -H \"Metadata-Flavor: Google\")\"\n\ncurl -X PUT --data \"in-progress\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install -H \"Metadata-Flavor: Google\"\n\nexport DATA_DRIVES=`ls /dev/sd* | egrep -v '^/dev/sda[0-9]*'`\nif [[ $DATA_DRIVES != \"\" ]]; then \\\n  log \"Found data disks - configuring\"\n  pvcreate $DATA_DRIVES\n  vgcreate splunk_data $DATA_DRIVES\n  lvcreate -n splunk_volume -i `echo $DATA_DRIVES | wc -l` -l 100%FREE splunk_data\n  mkfs.ext4 /dev/splunk_data/splunk_volume\n  mkdir -p /opt\n  cat \u003e\u003e/etc/fstab \u003c\u003cend\n/dev/splunk_data/splunk_volume /opt ext4 defaults 0 0\nend\n  mount /dev/splunk_data/splunk_volume\nfi\n\nlog \"Downloading and installing\"\n# Download \u0026 install Splunk Enterprise\nif [ ! -d \"$SPLUNK_HOME\" ]; then \n  wget -O ${SPLUNK_PACKAGE_NAME} \"${SPLUNK_PACKAGE_URL}\"\n  tar zxf ${SPLUNK_PACKAGE_NAME}\n  mv splunk $SPLUNK_HOME\n  rm ${SPLUNK_PACKAGE_NAME}\nfi\n\nlog \"Creating user and intial Splunk configurations\"\n# Create Splunk system user, and set directory permissions\nif ! id $SPLUNK_USER \u003e/dev/null 2\u003e\u00261; then\n  useradd -r -m -s /bin/bash -U $SPLUNK_USER\nfi\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME\n\n# Work around for having to pass admin pass\ncd ~\nmkdir .splunk\nchmod 777 -R .splunk\ntouch .splunk/authToken_hostname_port\nchmod 600 .splunk/authToken_hostname_port\ncd $SPLUNK_HOME\n\n\n# Set Splunk admin password and disable first-time run password prompt\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/user-seed.conf \u003c\u003cend\n[user_info]\nUSERNAME = admin\nPASSWORD = ${SPLUNK_ADMIN_PASSWORD}\nend\ntouch $SPLUNK_HOME/etc/.ui_login\n\n# Configure systemd to start Splunk at boot\ncd /opt/splunk\nbin/splunk enable boot-start -user $SPLUNK_USER --accept-license -systemd-managed 0\n\n# Configure Splunk before starting service\n# Increase splunkweb connection timeout with splunkd\nmkdir -p $SPLUNK_HOME/etc/apps/base-autogenerated/local\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/web.conf \u003c\u003cend\n[settings]\nsplunkdConnectionTimeout = 300\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\nlog \"Starting Splunk Service\"\n# Start Splunk service\nsudo /etc/init.d/splunk start\n\n# Allow for Splunk start-up time\nsleep 10\n\nif [ $SPLUNK_ROLE = \"IDX-Master\" ]; then\nlog \"Cluster Master configuration\"\n\n# Change default to HTTPS on the web interface\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/web.conf \u003c\u003cend\n[settings]\nenableSplunkWebSSL = 1\nend\n\n# Forward to indexer cluster using indexer discovery\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = ${SPLUNK_INDEXER_DISCOVERY_SECRET}\nmaster_uri = https://127.0.0.1:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\nsudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'${SPLUNK_ADMIN_PASSWORD}'\nsudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode master -replication_factor 3 -search_factor 2 -secret '${SPLUNK_CLUSTER_SECRET}' -cluster_label Splunk-IDX\n\n# Configure indexer discovery - pass4SymmKey doesn't get hashed\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/server.conf \u003c\u003cend\n\n[indexer_discovery]\npass4SymmKey = ${SPLUNK_INDEXER_DISCOVERY_SECRET}\nindexerWeightByDiskCapacity = true\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local/server.conf\n\n# Add base configs for peer nodes as an app under master-apps\n# Peer config 1: Enable HEC input\nsudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector enable -uri https://localhost:8089 -auth admin:'${SPLUNK_ADMIN_PASSWORD}'\nsudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector create default-token -uri https://localhost:8089 -auth admin:'${SPLUNK_ADMIN_PASSWORD}' \u003e /tmp/token\nTOKEN=`sed -n 's/\\\\ttoken=//p' /tmp/token`\nrm /tmp/token\nlog \"Setting HEC Token as guest attribute\"\ncurl -X PUT --data \"$TOKEN\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/token -H \"Metadata-Flavor: Google\"\n\nmkdir -p $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local\nmv $SPLUNK_HOME/etc/apps/splunk_httpinput/local/inputs.conf $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local\n# Peer config 2: Enable splunktcp input\ncat \u003e\u003e$SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local/inputs.conf \u003c\u003cend\n\n[splunktcp://9997]\ndisabled=0\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/master-apps\n\nelse\n# Link up with License Master\n# TODO: Add following when enterprise license installed on cluster master\n#sudo -u $SPLUNK_USER $SPLUNK_BIN edit licenser-localslave -master_uri https://${SPLUNK_CM_PRIVATE_IP}:8089 -auth admin:'${SPLUNK_ADMIN_PASSWORD}'\nlog \"Skip license master link up\" \nfi\n\nif [ $SPLUNK_ROLE = \"SHC-Deployer\" ]; then\nlog \"Deployer configurations\"\n\n# Change default to HTTPS on the web interface\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/web.conf \u003c\u003cend\n[settings]\nenableSplunkWebSSL = 1\nend\n\n# Configure some SHC parameters\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/server.conf \u003c\u003cend\n\n[shclustering]\npass4SymmKey = ${SPLUNK_CLUSTER_SECRET}\nshcluster_label = SplunkSHC\nend\n\n# Forward to indexer cluster using indexer discovery\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing on the search head\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = ${SPLUNK_INDEXER_DISCOVERY_SECRET}\nmaster_uri = https://${SPLUNK_CM_PRIVATE_IP}:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\n# Add base config for search head cluster members\nmkdir -p $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local\ncat \u003e\u003e$SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing on the search head\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = ${SPLUNK_INDEXER_DISCOVERY_SECRET}\nmaster_uri = https://${SPLUNK_CM_PRIVATE_IP}:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated\n\nsudo -u $SPLUNK_USER $SPLUNK_BIN apply shcluster-bundle -action stage --answer-yes -auth admin:'${SPLUNK_ADMIN_PASSWORD}'\n# TODO: send bundle after SHC is initialized with captain bootstrapped\n\n\nelif [ $SPLUNK_ROLE = \"SHC-Member\" ]; then\n  log \"Search Head Member configurations\"\n  # Configure some SHC parameters\n  cat \u003e\u003e$SPLUNK_HOME/etc/system/local/server.conf \u003c\u003cend\n[shclustering]\nregister_replication_address = $LOCAL_IP\nend\n  chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local\n  log \"Setting cluster config and connecting to master\"\n  # Sometimes the master is restarting at the same time, retry up to 5 times\n  command=\"sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'${SPLUNK_ADMIN_PASSWORD}' \u0026\u0026 \\\n  sudo -u $SPLUNK_USER $SPLUNK_BIN init shcluster-config -mgmt_uri https://$LOCAL_IP:8089 -replication_port 8090 -replication_factor 2 -conf_deploy_fetch_url https://${SPLUNK_DEPLOYER_PRIVATE_IP}:8089 -shcluster_label Splunk-SHC -secret '${SPLUNK_CLUSTER_SECRET}' \u0026\u0026 \\\n  sudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode searchhead -master_uri https://${SPLUNK_CM_PRIVATE_IP}:8089 -secret '${SPLUNK_CLUSTER_SECRET}'\"\n  count=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\nelif [ $SPLUNK_ROLE = \"IDX-Peer\" ]; then\n\nlog \"Setting cluster config and connecting to master\"\n# Sometimes the master is restarting at the same time, retry up to 5 times\ncommand=\"sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'${SPLUNK_ADMIN_PASSWORD}' \u0026\u0026 \\\nsudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode slave -master_uri https://${SPLUNK_CM_PRIVATE_IP}:8089 -replication_port 9887 -secret '${SPLUNK_CLUSTER_SECRET}'\"\ncount=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\n\nfi\n\n# Removing temporary permissive .splunk directory\ncd ~\nrm -Rf .splunk\n\nlog \"Final restart of services\"\n# Start Splunk service - changed with 8.0.0 - sometimes it gets an error connecting to it's local web server\ncommand=\"/etc/init.d/splunk restart\"\ncount=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\n\n# Add guest attribute indicating the install process has successfully completed\ncurl -X PUT --data \"complete\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install -H \"Metadata-Flavor: Google\"\nlog \"Finished setup on $HOSTNAME with role $SPLUNK_ROLE\"\n\nexit 0\n",
            "vars": {
              "SPLUNK_ADMIN_PASSWORD": "emekaigbokwe",
              "SPLUNK_CLUSTER_SECRET": "emekaigbokwe",
              "SPLUNK_CM_PRIVATE_IP": "192.168.0.2",
              "SPLUNK_DEPLOYER_PRIVATE_IP": "192.168.0.3",
              "SPLUNK_INDEXER_DISCOVERY_SECRET": "emekaigbokwe",
              "SPLUNK_PACKAGE_NAME": "splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz",
              "SPLUNK_PACKAGE_URL": "http://download.splunk.com/products/splunk/releases/8.0.0/linux/splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz"
            }
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_address",
      "name": "splunk_cluster_master_ip",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": "192.168.0.2",
            "address_type": "INTERNAL",
            "creation_timestamp": "2020-06-25T20:08:43.900-07:00",
            "description": "",
            "id": "igbokwe-test/us-central1/splunk-cm-ip",
            "name": "splunk-cm-ip",
            "network_tier": "PREMIUM",
            "project": "igbokwe-test",
            "purpose": "GCE_ENDPOINT",
            "region": "us-central1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/addresses/splunk-cm-ip",
            "subnetwork": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/subnetworks/splunksubnet",
            "timeouts": null,
            "users": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "google_compute_network.vpc_network",
            "google_compute_subnetwork.splunk_subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_address",
      "name": "splunk_deployer_ip",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": "192.168.0.3",
            "address_type": "INTERNAL",
            "creation_timestamp": "2020-06-25T20:08:43.807-07:00",
            "description": "",
            "id": "igbokwe-test/us-central1/splunk-deployer-ip",
            "name": "splunk-deployer-ip",
            "network_tier": "PREMIUM",
            "project": "igbokwe-test",
            "purpose": "GCE_ENDPOINT",
            "region": "us-central1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/addresses/splunk-deployer-ip",
            "subnetwork": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/subnetworks/splunksubnet",
            "timeouts": null,
            "users": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "google_compute_network.vpc_network",
            "google_compute_subnetwork.splunk_subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_backend_service",
      "name": "default",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "affinity_cookie_ttl_sec": 86400,
            "backend": [
              {
                "balancing_mode": "UTILIZATION",
                "capacity_scaler": 1,
                "description": "",
                "group": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/instanceGroups/splunk-shc-mig",
                "max_connections": null,
                "max_connections_per_endpoint": null,
                "max_connections_per_instance": null,
                "max_rate": null,
                "max_rate_per_endpoint": null,
                "max_rate_per_instance": null,
                "max_utilization": 0.8
              }
            ],
            "cdn_policy": [],
            "connection_draining_timeout_sec": 300,
            "creation_timestamp": "2020-06-25T20:09:33.561-07:00",
            "description": "",
            "enable_cdn": true,
            "fingerprint": "CUOwN-Jvy-E=",
            "health_checks": [
              "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/healthChecks/shc-mgmt-port-health-check"
            ],
            "iap": [],
            "id": "shc-splunkweb",
            "load_balancing_scheme": "EXTERNAL",
            "name": "shc-splunkweb",
            "port_name": "splunkweb",
            "project": "igbokwe-test",
            "protocol": "HTTP",
            "security_policy": "",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/backendServices/shc-splunkweb",
            "session_affinity": "GENERATED_COOKIE",
            "timeout_sec": 30,
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_firewall.allow_health_checks",
            "google_compute_firewall.allow_internal",
            "google_compute_firewall.allow_splunk_web",
            "google_compute_firewall.allow_ssh",
            "google_compute_health_check.default",
            "google_compute_instance.splunk_cluster_master",
            "google_compute_instance.splunk_deployer",
            "google_compute_instance_template.splunk_shc_template",
            "google_compute_network.vpc_network",
            "google_compute_region_instance_group_manager.search_head_cluster",
            "google_compute_subnetwork.splunk_subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_backend_service",
      "name": "splunk_hec",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "affinity_cookie_ttl_sec": 0,
            "backend": [
              {
                "balancing_mode": "UTILIZATION",
                "capacity_scaler": 1,
                "description": "",
                "group": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/instanceGroups/splunk-idx-mig",
                "max_connections": null,
                "max_connections_per_endpoint": null,
                "max_connections_per_instance": null,
                "max_rate": null,
                "max_rate_per_endpoint": null,
                "max_rate_per_instance": null,
                "max_utilization": 0.8
              }
            ],
            "cdn_policy": [],
            "connection_draining_timeout_sec": 300,
            "creation_timestamp": "2020-06-25T20:09:25.147-07:00",
            "description": "",
            "enable_cdn": false,
            "fingerprint": "dE7kyc7DHbs=",
            "health_checks": [
              "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/healthChecks/idx-hec-port-health-check"
            ],
            "iap": [],
            "id": "idx-splunk-hec",
            "load_balancing_scheme": "EXTERNAL",
            "name": "idx-splunk-hec",
            "port_name": "splunkhec",
            "project": "igbokwe-test",
            "protocol": "HTTPS",
            "security_policy": "",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/backendServices/idx-splunk-hec",
            "session_affinity": "NONE",
            "timeout_sec": 30,
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_disk.indexer-data-disk",
            "google_compute_firewall.allow_health_checks",
            "google_compute_firewall.allow_internal",
            "google_compute_firewall.allow_splunk_web",
            "google_compute_firewall.allow_ssh",
            "google_compute_health_check.splunk_hec",
            "google_compute_image.indexer-data-disk-image",
            "google_compute_instance.splunk_cluster_master",
            "google_compute_instance_template.splunk_idx_template-localssd",
            "google_compute_instance_template.splunk_idx_template-pd",
            "google_compute_network.vpc_network",
            "google_compute_region_instance_group_manager.indexer_cluster",
            "google_compute_subnetwork.splunk_subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_disk",
      "name": "indexer-data-disk",
      "each": "list",
      "provider": "provider.google",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2020-06-25T20:08:01.299-07:00",
            "description": "",
            "disk_encryption_key": [],
            "disk_encryption_key_raw": null,
            "disk_encryption_key_sha256": null,
            "id": "splunk-indexer-data",
            "image": "",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "last_attach_timestamp": "",
            "last_detach_timestamp": "",
            "name": "splunk-indexer-data",
            "physical_block_size_bytes": 4096,
            "project": "igbokwe-test",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-c/disks/splunk-indexer-data",
            "size": 100,
            "snapshot": "",
            "source_image_encryption_key": [],
            "source_image_id": "",
            "source_snapshot_encryption_key": [],
            "source_snapshot_id": "",
            "timeouts": null,
            "type": "pd-ssd",
            "users": [],
            "zone": "us-central1-c"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow_health_checks",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "8089",
                  "8088"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2020-06-25T20:08:17.286-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "id": "splunk-network-allow-health-checks",
            "name": "splunk-network-allow-health-checks",
            "network": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/networks/splunk",
            "priority": 1000,
            "project": "igbokwe-test",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/firewalls/splunk-network-allow-health-checks",
            "source_ranges": [
              "130.211.0.0/22",
              "35.191.0.0/16"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "splunk"
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "google_compute_network.vpc_network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow_internal",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [],
                "protocol": "icmp"
              },
              {
                "ports": [],
                "protocol": "tcp"
              },
              {
                "ports": [],
                "protocol": "udp"
              }
            ],
            "creation_timestamp": "2020-06-25T20:08:17.276-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "id": "splunk-network-allow-internal",
            "name": "splunk-network-allow-internal",
            "network": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/networks/splunk",
            "priority": 1000,
            "project": "igbokwe-test",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/firewalls/splunk-network-allow-internal",
            "source_ranges": [],
            "source_service_accounts": null,
            "source_tags": [
              "splunk"
            ],
            "target_service_accounts": null,
            "target_tags": [
              "splunk"
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "google_compute_network.vpc_network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow_splunk_web",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "8000"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2020-06-25T20:08:17.286-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "id": "splunk-network-allow-web",
            "name": "splunk-network-allow-web",
            "network": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/networks/splunk",
            "priority": 1000,
            "project": "igbokwe-test",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/firewalls/splunk-network-allow-web",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "splunk"
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "google_compute_network.vpc_network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow_ssh",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "22"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2020-06-25T20:08:17.310-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "id": "splunk-network-allow-ssh",
            "name": "splunk-network-allow-ssh",
            "network": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/networks/splunk",
            "priority": 1000,
            "project": "igbokwe-test",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/firewalls/splunk-network-allow-ssh",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "splunk"
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "google_compute_network.vpc_network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_global_address",
      "name": "indexer_hec_input_address",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": "34.107.168.220",
            "address_type": "EXTERNAL",
            "creation_timestamp": "2020-06-25T20:08:01.055-07:00",
            "description": "",
            "id": "splunk-idx-hecinput-address",
            "ip_version": "",
            "name": "splunk-idx-hecinput-address",
            "network": "",
            "prefix_length": 0,
            "project": "igbokwe-test",
            "purpose": "",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/addresses/splunk-idx-hecinput-address",
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_global_address",
      "name": "search_head_cluster_address",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": "35.190.85.97",
            "address_type": "EXTERNAL",
            "creation_timestamp": "2020-06-25T20:08:01.071-07:00",
            "description": "",
            "id": "splunk-shc-splunkweb-address",
            "ip_version": "",
            "name": "splunk-shc-splunkweb-address",
            "network": "",
            "prefix_length": 0,
            "project": "igbokwe-test",
            "purpose": "",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/addresses/splunk-shc-splunkweb-address",
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_global_forwarding_rule",
      "name": "indexer_hec_input_rule",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "",
            "id": "splunk-idx-hecinput-rule",
            "ip_address": "34.107.168.220",
            "ip_protocol": "TCP",
            "ip_version": "",
            "load_balancing_scheme": "EXTERNAL",
            "metadata_filters": [],
            "name": "splunk-idx-hecinput-rule",
            "port_range": "8080-8080",
            "project": "igbokwe-test",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/forwardingRules/splunk-idx-hecinput-rule",
            "target": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/targetHttpProxies/splunk-idx-hecinput-proxy",
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_backend_service.splunk_hec",
            "google_compute_disk.indexer-data-disk",
            "google_compute_firewall.allow_health_checks",
            "google_compute_firewall.allow_internal",
            "google_compute_firewall.allow_splunk_web",
            "google_compute_firewall.allow_ssh",
            "google_compute_global_address.indexer_hec_input_address",
            "google_compute_health_check.splunk_hec",
            "google_compute_image.indexer-data-disk-image",
            "google_compute_instance.splunk_cluster_master",
            "google_compute_instance_template.splunk_idx_template-localssd",
            "google_compute_instance_template.splunk_idx_template-pd",
            "google_compute_network.vpc_network",
            "google_compute_region_instance_group_manager.indexer_cluster",
            "google_compute_subnetwork.splunk_subnet",
            "google_compute_target_http_proxy.indexer_hec_input_proxy",
            "google_compute_url_map.indexer_hec_input_url_map"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_global_forwarding_rule",
      "name": "search_head_cluster_rule",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "",
            "id": "splunk-shc-splunkweb-rule",
            "ip_address": "35.190.85.97",
            "ip_protocol": "TCP",
            "ip_version": "",
            "load_balancing_scheme": "EXTERNAL",
            "metadata_filters": [],
            "name": "splunk-shc-splunkweb-rule",
            "port_range": "80-80",
            "project": "igbokwe-test",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/forwardingRules/splunk-shc-splunkweb-rule",
            "target": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/targetHttpProxies/splunk-shc-splunkweb-proxy",
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_backend_service.default",
            "google_compute_firewall.allow_health_checks",
            "google_compute_firewall.allow_internal",
            "google_compute_firewall.allow_splunk_web",
            "google_compute_firewall.allow_ssh",
            "google_compute_global_address.search_head_cluster_address",
            "google_compute_health_check.default",
            "google_compute_instance.splunk_cluster_master",
            "google_compute_instance.splunk_deployer",
            "google_compute_instance_template.splunk_shc_template",
            "google_compute_network.vpc_network",
            "google_compute_region_instance_group_manager.search_head_cluster",
            "google_compute_subnetwork.splunk_subnet",
            "google_compute_target_http_proxy.search_head_cluster_proxy",
            "google_compute_url_map.search_head_cluster_url_map"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_health_check",
      "name": "default",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "check_interval_sec": 15,
            "creation_timestamp": "2020-06-25T20:08:32.867-07:00",
            "description": "",
            "healthy_threshold": 2,
            "http2_health_check": [],
            "http_health_check": [],
            "https_health_check": [],
            "id": "shc-mgmt-port-health-check",
            "name": "shc-mgmt-port-health-check",
            "project": "igbokwe-test",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/healthChecks/shc-mgmt-port-health-check",
            "ssl_health_check": [],
            "tcp_health_check": [
              {
                "port": 8089,
                "port_name": "",
                "port_specification": "",
                "proxy_header": "NONE",
                "request": "",
                "response": ""
              }
            ],
            "timeout_sec": 5,
            "timeouts": null,
            "type": "TCP",
            "unhealthy_threshold": 3
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_firewall.allow_health_checks",
            "google_compute_network.vpc_network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_health_check",
      "name": "splunk_hec",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "check_interval_sec": 15,
            "creation_timestamp": "2020-06-25T20:08:32.858-07:00",
            "description": "",
            "healthy_threshold": 2,
            "http2_health_check": [],
            "http_health_check": [],
            "https_health_check": [
              {
                "host": "",
                "port": 8088,
                "port_name": "",
                "port_specification": "",
                "proxy_header": "NONE",
                "request_path": "/services/collector/health",
                "response": ""
              }
            ],
            "id": "idx-hec-port-health-check",
            "name": "idx-hec-port-health-check",
            "project": "igbokwe-test",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/healthChecks/idx-hec-port-health-check",
            "ssl_health_check": [],
            "tcp_health_check": [],
            "timeout_sec": 5,
            "timeouts": null,
            "type": "HTTPS",
            "unhealthy_threshold": 3
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_firewall.allow_health_checks",
            "google_compute_network.vpc_network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_image",
      "name": "indexer-data-disk-image",
      "each": "list",
      "provider": "provider.google",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "archive_size_bytes": 0,
            "creation_timestamp": "2020-06-25T20:08:04.695-07:00",
            "description": "",
            "disk_size_gb": 100,
            "family": "",
            "guest_os_features": [],
            "id": "splunk-indexer-data-image",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "licenses": [],
            "name": "splunk-indexer-data-image",
            "project": "igbokwe-test",
            "raw_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/images/splunk-indexer-data-image",
            "source_disk": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-c/disks/splunk-indexer-data",
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_disk.indexer-data-disk"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "splunk_cluster_master",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 6,
          "attributes": {
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20200611",
                    "labels": {},
                    "size": 50,
                    "type": "pd-ssd"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-c/disks/splunk-cluster-master"
              }
            ],
            "can_ip_forward": false,
            "cpu_platform": "Intel Haswell",
            "deletion_protection": false,
            "description": "",
            "disk": [],
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "splunk-cluster-master",
            "instance_id": "6793199007999514671",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "n1-standard-4",
            "metadata": {
              "enable-guest-attributes": "TRUE",
              "splunk-role": "IDX-Master",
              "startup-script": "#!/bin/bash\n#\n# Copyright 2019 Google LLC\n# \n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n# \n#     https://www.apache.org/licenses/LICENSE-2.0\n# \n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -e\nset -x\n\nlog() { \n  echo \"`date`: $1\"; \n  curl -X PUT --data \"$1\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install-status -H \"Metadata-Flavor: Google\"\n}\n\nexport SPLUNK_USER=splunk\nexport SPLUNK_BIN=/opt/splunk/bin/splunk\nexport SPLUNK_HOME=/opt/splunk\nexport SPLUNK_ROLE=\"$(curl http://metadata.google.internal/computeMetadata/v1/instance/attributes/splunk-role -H \"Metadata-Flavor: Google\")\"\nexport LOCAL_IP=\"$(curl http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip -H \"Metadata-Flavor: Google\")\"\n\ncurl -X PUT --data \"in-progress\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install -H \"Metadata-Flavor: Google\"\n\nexport DATA_DRIVES=`ls /dev/sd* | egrep -v '^/dev/sda[0-9]*'`\nif [[ $DATA_DRIVES != \"\" ]]; then \\\n  log \"Found data disks - configuring\"\n  pvcreate $DATA_DRIVES\n  vgcreate splunk_data $DATA_DRIVES\n  lvcreate -n splunk_volume -i `echo $DATA_DRIVES | wc -l` -l 100%FREE splunk_data\n  mkfs.ext4 /dev/splunk_data/splunk_volume\n  mkdir -p /opt\n  cat \u003e\u003e/etc/fstab \u003c\u003cend\n/dev/splunk_data/splunk_volume /opt ext4 defaults 0 0\nend\n  mount /dev/splunk_data/splunk_volume\nfi\n\nlog \"Downloading and installing\"\n# Download \u0026 install Splunk Enterprise\nif [ ! -d \"$SPLUNK_HOME\" ]; then \n  wget -O splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz \"http://download.splunk.com/products/splunk/releases/8.0.0/linux/splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\"\n  tar zxf splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\n  mv splunk $SPLUNK_HOME\n  rm splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\nfi\n\nlog \"Creating user and intial Splunk configurations\"\n# Create Splunk system user, and set directory permissions\nif ! id $SPLUNK_USER \u003e/dev/null 2\u003e\u00261; then\n  useradd -r -m -s /bin/bash -U $SPLUNK_USER\nfi\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME\n\n# Work around for having to pass admin pass\ncd ~\nmkdir .splunk\nchmod 777 -R .splunk\ntouch .splunk/authToken_hostname_port\nchmod 600 .splunk/authToken_hostname_port\ncd $SPLUNK_HOME\n\n\n# Set Splunk admin password and disable first-time run password prompt\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/user-seed.conf \u003c\u003cend\n[user_info]\nUSERNAME = admin\nPASSWORD = emekaigbokwe\nend\ntouch $SPLUNK_HOME/etc/.ui_login\n\n# Configure systemd to start Splunk at boot\ncd /opt/splunk\nbin/splunk enable boot-start -user $SPLUNK_USER --accept-license -systemd-managed 0\n\n# Configure Splunk before starting service\n# Increase splunkweb connection timeout with splunkd\nmkdir -p $SPLUNK_HOME/etc/apps/base-autogenerated/local\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/web.conf \u003c\u003cend\n[settings]\nsplunkdConnectionTimeout = 300\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\nlog \"Starting Splunk Service\"\n# Start Splunk service\nsudo /etc/init.d/splunk start\n\n# Allow for Splunk start-up time\nsleep 10\n\nif [ $SPLUNK_ROLE = \"IDX-Master\" ]; then\nlog \"Cluster Master configuration\"\n\n# Change default to HTTPS on the web interface\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/web.conf \u003c\u003cend\n[settings]\nenableSplunkWebSSL = 1\nend\n\n# Forward to indexer cluster using indexer discovery\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://127.0.0.1:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\nsudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe'\nsudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode master -replication_factor 3 -search_factor 2 -secret 'emekaigbokwe' -cluster_label Splunk-IDX\n\n# Configure indexer discovery - pass4SymmKey doesn't get hashed\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/server.conf \u003c\u003cend\n\n[indexer_discovery]\npass4SymmKey = emekaigbokwe\nindexerWeightByDiskCapacity = true\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local/server.conf\n\n# Add base configs for peer nodes as an app under master-apps\n# Peer config 1: Enable HEC input\nsudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector enable -uri https://localhost:8089 -auth admin:'emekaigbokwe'\nsudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector create default-token -uri https://localhost:8089 -auth admin:'emekaigbokwe' \u003e /tmp/token\nTOKEN=`sed -n 's/\\\\ttoken=//p' /tmp/token`\nrm /tmp/token\nlog \"Setting HEC Token as guest attribute\"\ncurl -X PUT --data \"$TOKEN\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/token -H \"Metadata-Flavor: Google\"\n\nmkdir -p $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local\nmv $SPLUNK_HOME/etc/apps/splunk_httpinput/local/inputs.conf $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local\n# Peer config 2: Enable splunktcp input\ncat \u003e\u003e$SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local/inputs.conf \u003c\u003cend\n\n[splunktcp://9997]\ndisabled=0\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/master-apps\n\nelse\n# Link up with License Master\n# TODO: Add following when enterprise license installed on cluster master\n#sudo -u $SPLUNK_USER $SPLUNK_BIN edit licenser-localslave -master_uri https://192.168.0.2:8089 -auth admin:'emekaigbokwe'\nlog \"Skip license master link up\" \nfi\n\nif [ $SPLUNK_ROLE = \"SHC-Deployer\" ]; then\nlog \"Deployer configurations\"\n\n# Change default to HTTPS on the web interface\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/web.conf \u003c\u003cend\n[settings]\nenableSplunkWebSSL = 1\nend\n\n# Configure some SHC parameters\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/server.conf \u003c\u003cend\n\n[shclustering]\npass4SymmKey = emekaigbokwe\nshcluster_label = SplunkSHC\nend\n\n# Forward to indexer cluster using indexer discovery\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing on the search head\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://192.168.0.2:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\n# Add base config for search head cluster members\nmkdir -p $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local\ncat \u003e\u003e$SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing on the search head\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://192.168.0.2:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated\n\nsudo -u $SPLUNK_USER $SPLUNK_BIN apply shcluster-bundle -action stage --answer-yes -auth admin:'emekaigbokwe'\n# TODO: send bundle after SHC is initialized with captain bootstrapped\n\n\nelif [ $SPLUNK_ROLE = \"SHC-Member\" ]; then\n  log \"Search Head Member configurations\"\n  # Configure some SHC parameters\n  cat \u003e\u003e$SPLUNK_HOME/etc/system/local/server.conf \u003c\u003cend\n[shclustering]\nregister_replication_address = $LOCAL_IP\nend\n  chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local\n  log \"Setting cluster config and connecting to master\"\n  # Sometimes the master is restarting at the same time, retry up to 5 times\n  command=\"sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe' \u0026\u0026 \\\n  sudo -u $SPLUNK_USER $SPLUNK_BIN init shcluster-config -mgmt_uri https://$LOCAL_IP:8089 -replication_port 8090 -replication_factor 2 -conf_deploy_fetch_url https://192.168.0.3:8089 -shcluster_label Splunk-SHC -secret 'emekaigbokwe' \u0026\u0026 \\\n  sudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode searchhead -master_uri https://192.168.0.2:8089 -secret 'emekaigbokwe'\"\n  count=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\nelif [ $SPLUNK_ROLE = \"IDX-Peer\" ]; then\n\nlog \"Setting cluster config and connecting to master\"\n# Sometimes the master is restarting at the same time, retry up to 5 times\ncommand=\"sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe' \u0026\u0026 \\\nsudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode slave -master_uri https://192.168.0.2:8089 -replication_port 9887 -secret 'emekaigbokwe'\"\ncount=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\n\nfi\n\n# Removing temporary permissive .splunk directory\ncd ~\nrm -Rf .splunk\n\nlog \"Final restart of services\"\n# Start Splunk service - changed with 8.0.0 - sometimes it gets an error connecting to it's local web server\ncommand=\"/etc/init.d/splunk restart\"\ncount=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\n\n# Add guest attribute indicating the install process has successfully completed\ncurl -X PUT --data \"complete\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install -H \"Metadata-Flavor: Google\"\nlog \"Finished setup on $HOSTNAME with role $SPLUNK_ROLE\"\n\nexit 0\n"
            },
            "metadata_fingerprint": "LwhgdPbmmqA=",
            "metadata_startup_script": null,
            "min_cpu_platform": "",
            "name": "splunk-cluster-master",
            "network_interface": [
              {
                "access_config": [
                  {
                    "assigned_nat_ip": "",
                    "nat_ip": "35.226.115.36",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "address": "",
                "alias_ip_range": [],
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/networks/splunk",
                "network_ip": "192.168.0.2",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/subnetworks/splunksubnet",
                "subnetwork_project": "igbokwe-test"
              }
            ],
            "project": "igbokwe-test",
            "scheduling": [
              {
                "automatic_restart": true,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-c/instances/splunk-cluster-master",
            "service_account": [],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": [
              "splunk"
            ],
            "tags_fingerprint": "Gt0dQ-0_YSY=",
            "timeouts": null,
            "zone": "us-central1-c"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_firewall.allow_internal",
            "google_compute_firewall.allow_splunk_web",
            "google_compute_firewall.allow_ssh",
            "google_compute_network.vpc_network",
            "google_compute_subnetwork.splunk_subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "splunk_deployer",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 6,
          "attributes": {
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20200611",
                    "labels": {},
                    "size": 50,
                    "type": "pd-ssd"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-c/disks/splunk-deployer"
              }
            ],
            "can_ip_forward": false,
            "cpu_platform": "Intel Haswell",
            "deletion_protection": false,
            "description": "",
            "disk": [],
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "splunk-deployer",
            "instance_id": "3053669999548356655",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "n1-standard-4",
            "metadata": {
              "enable-guest-attributes": "TRUE",
              "splunk-role": "SHC-Deployer",
              "startup-script": "#!/bin/bash\n#\n# Copyright 2019 Google LLC\n# \n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n# \n#     https://www.apache.org/licenses/LICENSE-2.0\n# \n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -e\nset -x\n\nlog() { \n  echo \"`date`: $1\"; \n  curl -X PUT --data \"$1\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install-status -H \"Metadata-Flavor: Google\"\n}\n\nexport SPLUNK_USER=splunk\nexport SPLUNK_BIN=/opt/splunk/bin/splunk\nexport SPLUNK_HOME=/opt/splunk\nexport SPLUNK_ROLE=\"$(curl http://metadata.google.internal/computeMetadata/v1/instance/attributes/splunk-role -H \"Metadata-Flavor: Google\")\"\nexport LOCAL_IP=\"$(curl http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip -H \"Metadata-Flavor: Google\")\"\n\ncurl -X PUT --data \"in-progress\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install -H \"Metadata-Flavor: Google\"\n\nexport DATA_DRIVES=`ls /dev/sd* | egrep -v '^/dev/sda[0-9]*'`\nif [[ $DATA_DRIVES != \"\" ]]; then \\\n  log \"Found data disks - configuring\"\n  pvcreate $DATA_DRIVES\n  vgcreate splunk_data $DATA_DRIVES\n  lvcreate -n splunk_volume -i `echo $DATA_DRIVES | wc -l` -l 100%FREE splunk_data\n  mkfs.ext4 /dev/splunk_data/splunk_volume\n  mkdir -p /opt\n  cat \u003e\u003e/etc/fstab \u003c\u003cend\n/dev/splunk_data/splunk_volume /opt ext4 defaults 0 0\nend\n  mount /dev/splunk_data/splunk_volume\nfi\n\nlog \"Downloading and installing\"\n# Download \u0026 install Splunk Enterprise\nif [ ! -d \"$SPLUNK_HOME\" ]; then \n  wget -O splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz \"http://download.splunk.com/products/splunk/releases/8.0.0/linux/splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\"\n  tar zxf splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\n  mv splunk $SPLUNK_HOME\n  rm splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\nfi\n\nlog \"Creating user and intial Splunk configurations\"\n# Create Splunk system user, and set directory permissions\nif ! id $SPLUNK_USER \u003e/dev/null 2\u003e\u00261; then\n  useradd -r -m -s /bin/bash -U $SPLUNK_USER\nfi\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME\n\n# Work around for having to pass admin pass\ncd ~\nmkdir .splunk\nchmod 777 -R .splunk\ntouch .splunk/authToken_hostname_port\nchmod 600 .splunk/authToken_hostname_port\ncd $SPLUNK_HOME\n\n\n# Set Splunk admin password and disable first-time run password prompt\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/user-seed.conf \u003c\u003cend\n[user_info]\nUSERNAME = admin\nPASSWORD = emekaigbokwe\nend\ntouch $SPLUNK_HOME/etc/.ui_login\n\n# Configure systemd to start Splunk at boot\ncd /opt/splunk\nbin/splunk enable boot-start -user $SPLUNK_USER --accept-license -systemd-managed 0\n\n# Configure Splunk before starting service\n# Increase splunkweb connection timeout with splunkd\nmkdir -p $SPLUNK_HOME/etc/apps/base-autogenerated/local\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/web.conf \u003c\u003cend\n[settings]\nsplunkdConnectionTimeout = 300\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\nlog \"Starting Splunk Service\"\n# Start Splunk service\nsudo /etc/init.d/splunk start\n\n# Allow for Splunk start-up time\nsleep 10\n\nif [ $SPLUNK_ROLE = \"IDX-Master\" ]; then\nlog \"Cluster Master configuration\"\n\n# Change default to HTTPS on the web interface\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/web.conf \u003c\u003cend\n[settings]\nenableSplunkWebSSL = 1\nend\n\n# Forward to indexer cluster using indexer discovery\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://127.0.0.1:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\nsudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe'\nsudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode master -replication_factor 3 -search_factor 2 -secret 'emekaigbokwe' -cluster_label Splunk-IDX\n\n# Configure indexer discovery - pass4SymmKey doesn't get hashed\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/server.conf \u003c\u003cend\n\n[indexer_discovery]\npass4SymmKey = emekaigbokwe\nindexerWeightByDiskCapacity = true\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local/server.conf\n\n# Add base configs for peer nodes as an app under master-apps\n# Peer config 1: Enable HEC input\nsudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector enable -uri https://localhost:8089 -auth admin:'emekaigbokwe'\nsudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector create default-token -uri https://localhost:8089 -auth admin:'emekaigbokwe' \u003e /tmp/token\nTOKEN=`sed -n 's/\\\\ttoken=//p' /tmp/token`\nrm /tmp/token\nlog \"Setting HEC Token as guest attribute\"\ncurl -X PUT --data \"$TOKEN\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/token -H \"Metadata-Flavor: Google\"\n\nmkdir -p $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local\nmv $SPLUNK_HOME/etc/apps/splunk_httpinput/local/inputs.conf $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local\n# Peer config 2: Enable splunktcp input\ncat \u003e\u003e$SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local/inputs.conf \u003c\u003cend\n\n[splunktcp://9997]\ndisabled=0\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/master-apps\n\nelse\n# Link up with License Master\n# TODO: Add following when enterprise license installed on cluster master\n#sudo -u $SPLUNK_USER $SPLUNK_BIN edit licenser-localslave -master_uri https://192.168.0.2:8089 -auth admin:'emekaigbokwe'\nlog \"Skip license master link up\" \nfi\n\nif [ $SPLUNK_ROLE = \"SHC-Deployer\" ]; then\nlog \"Deployer configurations\"\n\n# Change default to HTTPS on the web interface\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/web.conf \u003c\u003cend\n[settings]\nenableSplunkWebSSL = 1\nend\n\n# Configure some SHC parameters\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/server.conf \u003c\u003cend\n\n[shclustering]\npass4SymmKey = emekaigbokwe\nshcluster_label = SplunkSHC\nend\n\n# Forward to indexer cluster using indexer discovery\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing on the search head\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://192.168.0.2:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\n# Add base config for search head cluster members\nmkdir -p $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local\ncat \u003e\u003e$SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing on the search head\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://192.168.0.2:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated\n\nsudo -u $SPLUNK_USER $SPLUNK_BIN apply shcluster-bundle -action stage --answer-yes -auth admin:'emekaigbokwe'\n# TODO: send bundle after SHC is initialized with captain bootstrapped\n\n\nelif [ $SPLUNK_ROLE = \"SHC-Member\" ]; then\n  log \"Search Head Member configurations\"\n  # Configure some SHC parameters\n  cat \u003e\u003e$SPLUNK_HOME/etc/system/local/server.conf \u003c\u003cend\n[shclustering]\nregister_replication_address = $LOCAL_IP\nend\n  chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local\n  log \"Setting cluster config and connecting to master\"\n  # Sometimes the master is restarting at the same time, retry up to 5 times\n  command=\"sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe' \u0026\u0026 \\\n  sudo -u $SPLUNK_USER $SPLUNK_BIN init shcluster-config -mgmt_uri https://$LOCAL_IP:8089 -replication_port 8090 -replication_factor 2 -conf_deploy_fetch_url https://192.168.0.3:8089 -shcluster_label Splunk-SHC -secret 'emekaigbokwe' \u0026\u0026 \\\n  sudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode searchhead -master_uri https://192.168.0.2:8089 -secret 'emekaigbokwe'\"\n  count=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\nelif [ $SPLUNK_ROLE = \"IDX-Peer\" ]; then\n\nlog \"Setting cluster config and connecting to master\"\n# Sometimes the master is restarting at the same time, retry up to 5 times\ncommand=\"sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe' \u0026\u0026 \\\nsudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode slave -master_uri https://192.168.0.2:8089 -replication_port 9887 -secret 'emekaigbokwe'\"\ncount=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\n\nfi\n\n# Removing temporary permissive .splunk directory\ncd ~\nrm -Rf .splunk\n\nlog \"Final restart of services\"\n# Start Splunk service - changed with 8.0.0 - sometimes it gets an error connecting to it's local web server\ncommand=\"/etc/init.d/splunk restart\"\ncount=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\n\n# Add guest attribute indicating the install process has successfully completed\ncurl -X PUT --data \"complete\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install -H \"Metadata-Flavor: Google\"\nlog \"Finished setup on $HOSTNAME with role $SPLUNK_ROLE\"\n\nexit 0\n"
            },
            "metadata_fingerprint": "PEI6kBWIoQU=",
            "metadata_startup_script": null,
            "min_cpu_platform": "",
            "name": "splunk-deployer",
            "network_interface": [
              {
                "access_config": [
                  {
                    "assigned_nat_ip": "",
                    "nat_ip": "104.154.114.254",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "address": "",
                "alias_ip_range": [],
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/networks/splunk",
                "network_ip": "192.168.0.3",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/subnetworks/splunksubnet",
                "subnetwork_project": "igbokwe-test"
              }
            ],
            "project": "igbokwe-test",
            "scheduling": [
              {
                "automatic_restart": true,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-c/instances/splunk-deployer",
            "service_account": [],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": [
              "splunk"
            ],
            "tags_fingerprint": "Gt0dQ-0_YSY=",
            "timeouts": null,
            "zone": "us-central1-c"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_firewall.allow_internal",
            "google_compute_firewall.allow_splunk_web",
            "google_compute_firewall.allow_ssh",
            "google_compute_network.vpc_network",
            "google_compute_subnetwork.splunk_subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_instance_template",
      "name": "splunk_idx_template-localssd",
      "each": "list",
      "provider": "provider.google",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "google_compute_instance_template",
      "name": "splunk_idx_template-pd",
      "each": "list",
      "provider": "provider.google",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "automatic_restart": null,
            "can_ip_forward": false,
            "description": "",
            "disk": [
              {
                "auto_delete": true,
                "boot": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key": [],
                "disk_name": "",
                "disk_size_gb": 50,
                "disk_type": "pd-ssd",
                "interface": "SCSI",
                "labels": null,
                "mode": "READ_WRITE",
                "source": "",
                "source_image": "projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts",
                "type": "PERSISTENT"
              },
              {
                "auto_delete": true,
                "boot": false,
                "device_name": "persistent-disk-1",
                "disk_encryption_key": [],
                "disk_name": "",
                "disk_size_gb": 0,
                "disk_type": "pd-standard",
                "interface": "SCSI",
                "labels": null,
                "mode": "READ_WRITE",
                "source": "",
                "source_image": "projects/igbokwe-test/global/images/splunk-indexer-data-image",
                "type": "PERSISTENT"
              }
            ],
            "enable_display": null,
            "guest_accelerator": [],
            "id": "splunk-idx-template-20200626030847786300000001",
            "instance_description": "",
            "labels": null,
            "machine_type": "n1-standard-4",
            "metadata": {
              "enable-guest-attributes": "TRUE",
              "splunk-role": "IDX-Peer",
              "startup-script": "#!/bin/bash\n#\n# Copyright 2019 Google LLC\n# \n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n# \n#     https://www.apache.org/licenses/LICENSE-2.0\n# \n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -e\nset -x\n\nlog() { \n  echo \"`date`: $1\"; \n  curl -X PUT --data \"$1\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install-status -H \"Metadata-Flavor: Google\"\n}\n\nexport SPLUNK_USER=splunk\nexport SPLUNK_BIN=/opt/splunk/bin/splunk\nexport SPLUNK_HOME=/opt/splunk\nexport SPLUNK_ROLE=\"$(curl http://metadata.google.internal/computeMetadata/v1/instance/attributes/splunk-role -H \"Metadata-Flavor: Google\")\"\nexport LOCAL_IP=\"$(curl http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip -H \"Metadata-Flavor: Google\")\"\n\ncurl -X PUT --data \"in-progress\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install -H \"Metadata-Flavor: Google\"\n\nexport DATA_DRIVES=`ls /dev/sd* | egrep -v '^/dev/sda[0-9]*'`\nif [[ $DATA_DRIVES != \"\" ]]; then \\\n  log \"Found data disks - configuring\"\n  pvcreate $DATA_DRIVES\n  vgcreate splunk_data $DATA_DRIVES\n  lvcreate -n splunk_volume -i `echo $DATA_DRIVES | wc -l` -l 100%FREE splunk_data\n  mkfs.ext4 /dev/splunk_data/splunk_volume\n  mkdir -p /opt\n  cat \u003e\u003e/etc/fstab \u003c\u003cend\n/dev/splunk_data/splunk_volume /opt ext4 defaults 0 0\nend\n  mount /dev/splunk_data/splunk_volume\nfi\n\nlog \"Downloading and installing\"\n# Download \u0026 install Splunk Enterprise\nif [ ! -d \"$SPLUNK_HOME\" ]; then \n  wget -O splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz \"http://download.splunk.com/products/splunk/releases/8.0.0/linux/splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\"\n  tar zxf splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\n  mv splunk $SPLUNK_HOME\n  rm splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\nfi\n\nlog \"Creating user and intial Splunk configurations\"\n# Create Splunk system user, and set directory permissions\nif ! id $SPLUNK_USER \u003e/dev/null 2\u003e\u00261; then\n  useradd -r -m -s /bin/bash -U $SPLUNK_USER\nfi\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME\n\n# Work around for having to pass admin pass\ncd ~\nmkdir .splunk\nchmod 777 -R .splunk\ntouch .splunk/authToken_hostname_port\nchmod 600 .splunk/authToken_hostname_port\ncd $SPLUNK_HOME\n\n\n# Set Splunk admin password and disable first-time run password prompt\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/user-seed.conf \u003c\u003cend\n[user_info]\nUSERNAME = admin\nPASSWORD = emekaigbokwe\nend\ntouch $SPLUNK_HOME/etc/.ui_login\n\n# Configure systemd to start Splunk at boot\ncd /opt/splunk\nbin/splunk enable boot-start -user $SPLUNK_USER --accept-license -systemd-managed 0\n\n# Configure Splunk before starting service\n# Increase splunkweb connection timeout with splunkd\nmkdir -p $SPLUNK_HOME/etc/apps/base-autogenerated/local\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/web.conf \u003c\u003cend\n[settings]\nsplunkdConnectionTimeout = 300\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\nlog \"Starting Splunk Service\"\n# Start Splunk service\nsudo /etc/init.d/splunk start\n\n# Allow for Splunk start-up time\nsleep 10\n\nif [ $SPLUNK_ROLE = \"IDX-Master\" ]; then\nlog \"Cluster Master configuration\"\n\n# Change default to HTTPS on the web interface\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/web.conf \u003c\u003cend\n[settings]\nenableSplunkWebSSL = 1\nend\n\n# Forward to indexer cluster using indexer discovery\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://127.0.0.1:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\nsudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe'\nsudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode master -replication_factor 3 -search_factor 2 -secret 'emekaigbokwe' -cluster_label Splunk-IDX\n\n# Configure indexer discovery - pass4SymmKey doesn't get hashed\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/server.conf \u003c\u003cend\n\n[indexer_discovery]\npass4SymmKey = emekaigbokwe\nindexerWeightByDiskCapacity = true\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local/server.conf\n\n# Add base configs for peer nodes as an app under master-apps\n# Peer config 1: Enable HEC input\nsudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector enable -uri https://localhost:8089 -auth admin:'emekaigbokwe'\nsudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector create default-token -uri https://localhost:8089 -auth admin:'emekaigbokwe' \u003e /tmp/token\nTOKEN=`sed -n 's/\\\\ttoken=//p' /tmp/token`\nrm /tmp/token\nlog \"Setting HEC Token as guest attribute\"\ncurl -X PUT --data \"$TOKEN\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/token -H \"Metadata-Flavor: Google\"\n\nmkdir -p $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local\nmv $SPLUNK_HOME/etc/apps/splunk_httpinput/local/inputs.conf $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local\n# Peer config 2: Enable splunktcp input\ncat \u003e\u003e$SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local/inputs.conf \u003c\u003cend\n\n[splunktcp://9997]\ndisabled=0\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/master-apps\n\nelse\n# Link up with License Master\n# TODO: Add following when enterprise license installed on cluster master\n#sudo -u $SPLUNK_USER $SPLUNK_BIN edit licenser-localslave -master_uri https://192.168.0.2:8089 -auth admin:'emekaigbokwe'\nlog \"Skip license master link up\" \nfi\n\nif [ $SPLUNK_ROLE = \"SHC-Deployer\" ]; then\nlog \"Deployer configurations\"\n\n# Change default to HTTPS on the web interface\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/web.conf \u003c\u003cend\n[settings]\nenableSplunkWebSSL = 1\nend\n\n# Configure some SHC parameters\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/server.conf \u003c\u003cend\n\n[shclustering]\npass4SymmKey = emekaigbokwe\nshcluster_label = SplunkSHC\nend\n\n# Forward to indexer cluster using indexer discovery\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing on the search head\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://192.168.0.2:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\n# Add base config for search head cluster members\nmkdir -p $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local\ncat \u003e\u003e$SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing on the search head\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://192.168.0.2:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated\n\nsudo -u $SPLUNK_USER $SPLUNK_BIN apply shcluster-bundle -action stage --answer-yes -auth admin:'emekaigbokwe'\n# TODO: send bundle after SHC is initialized with captain bootstrapped\n\n\nelif [ $SPLUNK_ROLE = \"SHC-Member\" ]; then\n  log \"Search Head Member configurations\"\n  # Configure some SHC parameters\n  cat \u003e\u003e$SPLUNK_HOME/etc/system/local/server.conf \u003c\u003cend\n[shclustering]\nregister_replication_address = $LOCAL_IP\nend\n  chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local\n  log \"Setting cluster config and connecting to master\"\n  # Sometimes the master is restarting at the same time, retry up to 5 times\n  command=\"sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe' \u0026\u0026 \\\n  sudo -u $SPLUNK_USER $SPLUNK_BIN init shcluster-config -mgmt_uri https://$LOCAL_IP:8089 -replication_port 8090 -replication_factor 2 -conf_deploy_fetch_url https://192.168.0.3:8089 -shcluster_label Splunk-SHC -secret 'emekaigbokwe' \u0026\u0026 \\\n  sudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode searchhead -master_uri https://192.168.0.2:8089 -secret 'emekaigbokwe'\"\n  count=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\nelif [ $SPLUNK_ROLE = \"IDX-Peer\" ]; then\n\nlog \"Setting cluster config and connecting to master\"\n# Sometimes the master is restarting at the same time, retry up to 5 times\ncommand=\"sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe' \u0026\u0026 \\\nsudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode slave -master_uri https://192.168.0.2:8089 -replication_port 9887 -secret 'emekaigbokwe'\"\ncount=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\n\nfi\n\n# Removing temporary permissive .splunk directory\ncd ~\nrm -Rf .splunk\n\nlog \"Final restart of services\"\n# Start Splunk service - changed with 8.0.0 - sometimes it gets an error connecting to it's local web server\ncommand=\"/etc/init.d/splunk restart\"\ncount=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\n\n# Add guest attribute indicating the install process has successfully completed\ncurl -X PUT --data \"complete\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install -H \"Metadata-Flavor: Google\"\nlog \"Finished setup on $HOSTNAME with role $SPLUNK_ROLE\"\n\nexit 0\n"
            },
            "metadata_fingerprint": "zqYcmnoP7FY=",
            "metadata_startup_script": null,
            "min_cpu_platform": "",
            "name": "splunk-idx-template-20200626030847786300000001",
            "name_prefix": "splunk-idx-template-",
            "network_interface": [
              {
                "access_config": [
                  {
                    "assigned_nat_ip": "",
                    "nat_ip": "",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "address": "",
                "alias_ip_range": [],
                "name": "",
                "network": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/networks/splunk",
                "network_ip": "",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/subnetworks/splunksubnet",
                "subnetwork_project": "igbokwe-test"
              }
            ],
            "on_host_maintenance": null,
            "project": "igbokwe-test",
            "region": "us-central1",
            "scheduling": [
              {
                "automatic_restart": true,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "self_link": "https://www.googleapis.com/compute/beta/projects/igbokwe-test/global/instanceTemplates/splunk-idx-template-20200626030847786300000001",
            "service_account": [],
            "shielded_instance_config": [],
            "tags": [
              "splunk"
            ],
            "tags_fingerprint": ""
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_disk.indexer-data-disk",
            "google_compute_image.indexer-data-disk-image",
            "google_compute_network.vpc_network",
            "google_compute_subnetwork.splunk_subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_instance_template",
      "name": "splunk_shc_template",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "automatic_restart": null,
            "can_ip_forward": false,
            "description": "",
            "disk": [
              {
                "auto_delete": true,
                "boot": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key": [],
                "disk_name": "",
                "disk_size_gb": 50,
                "disk_type": "pd-ssd",
                "interface": "SCSI",
                "labels": null,
                "mode": "READ_WRITE",
                "source": "",
                "source_image": "projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts",
                "type": "PERSISTENT"
              }
            ],
            "enable_display": null,
            "guest_accelerator": [],
            "id": "splunk-shc-template-20200626030847824300000002",
            "instance_description": "",
            "labels": null,
            "machine_type": "n1-standard-4",
            "metadata": {
              "enable-guest-attributes": "TRUE",
              "splunk-role": "SHC-Member",
              "startup-script": "#!/bin/bash\n#\n# Copyright 2019 Google LLC\n# \n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n# \n#     https://www.apache.org/licenses/LICENSE-2.0\n# \n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -e\nset -x\n\nlog() { \n  echo \"`date`: $1\"; \n  curl -X PUT --data \"$1\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install-status -H \"Metadata-Flavor: Google\"\n}\n\nexport SPLUNK_USER=splunk\nexport SPLUNK_BIN=/opt/splunk/bin/splunk\nexport SPLUNK_HOME=/opt/splunk\nexport SPLUNK_ROLE=\"$(curl http://metadata.google.internal/computeMetadata/v1/instance/attributes/splunk-role -H \"Metadata-Flavor: Google\")\"\nexport LOCAL_IP=\"$(curl http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip -H \"Metadata-Flavor: Google\")\"\n\ncurl -X PUT --data \"in-progress\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install -H \"Metadata-Flavor: Google\"\n\nexport DATA_DRIVES=`ls /dev/sd* | egrep -v '^/dev/sda[0-9]*'`\nif [[ $DATA_DRIVES != \"\" ]]; then \\\n  log \"Found data disks - configuring\"\n  pvcreate $DATA_DRIVES\n  vgcreate splunk_data $DATA_DRIVES\n  lvcreate -n splunk_volume -i `echo $DATA_DRIVES | wc -l` -l 100%FREE splunk_data\n  mkfs.ext4 /dev/splunk_data/splunk_volume\n  mkdir -p /opt\n  cat \u003e\u003e/etc/fstab \u003c\u003cend\n/dev/splunk_data/splunk_volume /opt ext4 defaults 0 0\nend\n  mount /dev/splunk_data/splunk_volume\nfi\n\nlog \"Downloading and installing\"\n# Download \u0026 install Splunk Enterprise\nif [ ! -d \"$SPLUNK_HOME\" ]; then \n  wget -O splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz \"http://download.splunk.com/products/splunk/releases/8.0.0/linux/splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\"\n  tar zxf splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\n  mv splunk $SPLUNK_HOME\n  rm splunk-8.0.0-1357bef0a7f6-Linux-x86_64.tgz\nfi\n\nlog \"Creating user and intial Splunk configurations\"\n# Create Splunk system user, and set directory permissions\nif ! id $SPLUNK_USER \u003e/dev/null 2\u003e\u00261; then\n  useradd -r -m -s /bin/bash -U $SPLUNK_USER\nfi\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME\n\n# Work around for having to pass admin pass\ncd ~\nmkdir .splunk\nchmod 777 -R .splunk\ntouch .splunk/authToken_hostname_port\nchmod 600 .splunk/authToken_hostname_port\ncd $SPLUNK_HOME\n\n\n# Set Splunk admin password and disable first-time run password prompt\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/user-seed.conf \u003c\u003cend\n[user_info]\nUSERNAME = admin\nPASSWORD = emekaigbokwe\nend\ntouch $SPLUNK_HOME/etc/.ui_login\n\n# Configure systemd to start Splunk at boot\ncd /opt/splunk\nbin/splunk enable boot-start -user $SPLUNK_USER --accept-license -systemd-managed 0\n\n# Configure Splunk before starting service\n# Increase splunkweb connection timeout with splunkd\nmkdir -p $SPLUNK_HOME/etc/apps/base-autogenerated/local\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/web.conf \u003c\u003cend\n[settings]\nsplunkdConnectionTimeout = 300\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\nlog \"Starting Splunk Service\"\n# Start Splunk service\nsudo /etc/init.d/splunk start\n\n# Allow for Splunk start-up time\nsleep 10\n\nif [ $SPLUNK_ROLE = \"IDX-Master\" ]; then\nlog \"Cluster Master configuration\"\n\n# Change default to HTTPS on the web interface\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/web.conf \u003c\u003cend\n[settings]\nenableSplunkWebSSL = 1\nend\n\n# Forward to indexer cluster using indexer discovery\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://127.0.0.1:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\nsudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe'\nsudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode master -replication_factor 3 -search_factor 2 -secret 'emekaigbokwe' -cluster_label Splunk-IDX\n\n# Configure indexer discovery - pass4SymmKey doesn't get hashed\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/server.conf \u003c\u003cend\n\n[indexer_discovery]\npass4SymmKey = emekaigbokwe\nindexerWeightByDiskCapacity = true\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local/server.conf\n\n# Add base configs for peer nodes as an app under master-apps\n# Peer config 1: Enable HEC input\nsudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector enable -uri https://localhost:8089 -auth admin:'emekaigbokwe'\nsudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector create default-token -uri https://localhost:8089 -auth admin:'emekaigbokwe' \u003e /tmp/token\nTOKEN=`sed -n 's/\\\\ttoken=//p' /tmp/token`\nrm /tmp/token\nlog \"Setting HEC Token as guest attribute\"\ncurl -X PUT --data \"$TOKEN\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/token -H \"Metadata-Flavor: Google\"\n\nmkdir -p $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local\nmv $SPLUNK_HOME/etc/apps/splunk_httpinput/local/inputs.conf $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local\n# Peer config 2: Enable splunktcp input\ncat \u003e\u003e$SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local/inputs.conf \u003c\u003cend\n\n[splunktcp://9997]\ndisabled=0\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/master-apps\n\nelse\n# Link up with License Master\n# TODO: Add following when enterprise license installed on cluster master\n#sudo -u $SPLUNK_USER $SPLUNK_BIN edit licenser-localslave -master_uri https://192.168.0.2:8089 -auth admin:'emekaigbokwe'\nlog \"Skip license master link up\" \nfi\n\nif [ $SPLUNK_ROLE = \"SHC-Deployer\" ]; then\nlog \"Deployer configurations\"\n\n# Change default to HTTPS on the web interface\ncat \u003e\u003e$SPLUNK_HOME/etc/system/local/web.conf \u003c\u003cend\n[settings]\nenableSplunkWebSSL = 1\nend\n\n# Configure some SHC parameters\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/server.conf \u003c\u003cend\n\n[shclustering]\npass4SymmKey = emekaigbokwe\nshcluster_label = SplunkSHC\nend\n\n# Forward to indexer cluster using indexer discovery\ncat \u003e\u003e$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing on the search head\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://192.168.0.2:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated\n\n# Add base config for search head cluster members\nmkdir -p $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local\ncat \u003e\u003e$SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local/outputs.conf \u003c\u003cend\n# Turn off indexing on the search head\n[indexAndForward]\nindex = false\n\n[tcpout]\ndefaultGroup = indexer_cluster_peers\nforwardedindex.filter.disable = true\nindexAndForward = false\n\n[tcpout:indexer_cluster_peers]\nindexerDiscovery = cluster_master\n\n[indexer_discovery:cluster_master]\npass4SymmKey = emekaigbokwe\nmaster_uri = https://192.168.0.2:8089\nend\n\nchown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated\n\nsudo -u $SPLUNK_USER $SPLUNK_BIN apply shcluster-bundle -action stage --answer-yes -auth admin:'emekaigbokwe'\n# TODO: send bundle after SHC is initialized with captain bootstrapped\n\n\nelif [ $SPLUNK_ROLE = \"SHC-Member\" ]; then\n  log \"Search Head Member configurations\"\n  # Configure some SHC parameters\n  cat \u003e\u003e$SPLUNK_HOME/etc/system/local/server.conf \u003c\u003cend\n[shclustering]\nregister_replication_address = $LOCAL_IP\nend\n  chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local\n  log \"Setting cluster config and connecting to master\"\n  # Sometimes the master is restarting at the same time, retry up to 5 times\n  command=\"sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe' \u0026\u0026 \\\n  sudo -u $SPLUNK_USER $SPLUNK_BIN init shcluster-config -mgmt_uri https://$LOCAL_IP:8089 -replication_port 8090 -replication_factor 2 -conf_deploy_fetch_url https://192.168.0.3:8089 -shcluster_label Splunk-SHC -secret 'emekaigbokwe' \u0026\u0026 \\\n  sudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode searchhead -master_uri https://192.168.0.2:8089 -secret 'emekaigbokwe'\"\n  count=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\nelif [ $SPLUNK_ROLE = \"IDX-Peer\" ]; then\n\nlog \"Setting cluster config and connecting to master\"\n# Sometimes the master is restarting at the same time, retry up to 5 times\ncommand=\"sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:'emekaigbokwe' \u0026\u0026 \\\nsudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode slave -master_uri https://192.168.0.2:8089 -replication_port 9887 -secret 'emekaigbokwe'\"\ncount=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\n\nfi\n\n# Removing temporary permissive .splunk directory\ncd ~\nrm -Rf .splunk\n\nlog \"Final restart of services\"\n# Start Splunk service - changed with 8.0.0 - sometimes it gets an error connecting to it's local web server\ncommand=\"/etc/init.d/splunk restart\"\ncount=1;until eval $command || (( $count \u003e= 5 )); do sleep 10; count=$((count + 1)); done\n\n# Add guest attribute indicating the install process has successfully completed\ncurl -X PUT --data \"complete\" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/install -H \"Metadata-Flavor: Google\"\nlog \"Finished setup on $HOSTNAME with role $SPLUNK_ROLE\"\n\nexit 0\n"
            },
            "metadata_fingerprint": "KkiBUAqX5Ac=",
            "metadata_startup_script": null,
            "min_cpu_platform": "",
            "name": "splunk-shc-template-20200626030847824300000002",
            "name_prefix": "splunk-shc-template-",
            "network_interface": [
              {
                "access_config": [
                  {
                    "assigned_nat_ip": "",
                    "nat_ip": "",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "address": "",
                "alias_ip_range": [],
                "name": "",
                "network": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/networks/splunk",
                "network_ip": "",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/subnetworks/splunksubnet",
                "subnetwork_project": "igbokwe-test"
              }
            ],
            "on_host_maintenance": null,
            "project": "igbokwe-test",
            "region": "us-central1",
            "scheduling": [
              {
                "automatic_restart": true,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "self_link": "https://www.googleapis.com/compute/beta/projects/igbokwe-test/global/instanceTemplates/splunk-shc-template-20200626030847824300000002",
            "service_account": [],
            "shielded_instance_config": [],
            "tags": [
              "splunk"
            ],
            "tags_fingerprint": ""
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_network.vpc_network",
            "google_compute_subnetwork.splunk_subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_network",
      "name": "vpc_network",
      "each": "list",
      "provider": "provider.google",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "auto_create_subnetworks": false,
            "delete_default_routes_on_create": false,
            "description": "",
            "gateway_ipv4": "",
            "id": "splunk",
            "ipv4_range": "",
            "name": "splunk",
            "project": "igbokwe-test",
            "routing_mode": "REGIONAL",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/networks/splunk",
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_region_instance_group_manager",
      "name": "indexer_cluster",
      "provider": "provider.google-beta",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_healing_policies": [],
            "base_instance_name": "splunk-idx",
            "description": "",
            "distribution_policy_zones": [
              "us-central1-b",
              "us-central1-c",
              "us-central1-f"
            ],
            "fingerprint": "vcZmh5s-riQ=",
            "id": "igbokwe-test/us-central1/splunk-idx-mig",
            "instance_group": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/instanceGroups/splunk-idx-mig",
            "name": "splunk-idx-mig",
            "named_port": [
              {
                "name": "splunkhec",
                "port": 8088
              },
              {
                "name": "splunktcp",
                "port": 9997
              }
            ],
            "project": "igbokwe-test",
            "region": "us-central1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/instanceGroupManagers/splunk-idx-mig",
            "target_pools": null,
            "target_size": 3,
            "timeouts": null,
            "update_policy": [
              {
                "instance_redistribution_type": "PROACTIVE",
                "max_surge_fixed": 3,
                "max_surge_percent": 0,
                "max_unavailable_fixed": 3,
                "max_unavailable_percent": 0,
                "min_ready_sec": 0,
                "minimal_action": "REPLACE",
                "type": "OPPORTUNISTIC"
              }
            ],
            "version": [
              {
                "instance_template": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/instanceTemplates/splunk-idx-template-20200626030847786300000001",
                "name": "splunk-idx-mig-version-0",
                "target_size": []
              }
            ],
            "wait_for_instances": false
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_disk.indexer-data-disk",
            "google_compute_firewall.allow_internal",
            "google_compute_firewall.allow_splunk_web",
            "google_compute_firewall.allow_ssh",
            "google_compute_image.indexer-data-disk-image",
            "google_compute_instance.splunk_cluster_master",
            "google_compute_instance_template.splunk_idx_template-localssd",
            "google_compute_instance_template.splunk_idx_template-pd",
            "google_compute_network.vpc_network",
            "google_compute_subnetwork.splunk_subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_region_instance_group_manager",
      "name": "search_head_cluster",
      "provider": "provider.google-beta",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_healing_policies": [],
            "base_instance_name": "splunk-sh",
            "description": "",
            "distribution_policy_zones": [
              "us-central1-b",
              "us-central1-c",
              "us-central1-f"
            ],
            "fingerprint": "A_sOn3_Or5U=",
            "id": "igbokwe-test/us-central1/splunk-shc-mig",
            "instance_group": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/instanceGroups/splunk-shc-mig",
            "name": "splunk-shc-mig",
            "named_port": [
              {
                "name": "splunkweb",
                "port": 8000
              }
            ],
            "project": "igbokwe-test",
            "region": "us-central1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/instanceGroupManagers/splunk-shc-mig",
            "target_pools": null,
            "target_size": 3,
            "timeouts": null,
            "update_policy": [
              {
                "instance_redistribution_type": "PROACTIVE",
                "max_surge_fixed": 3,
                "max_surge_percent": 0,
                "max_unavailable_fixed": 3,
                "max_unavailable_percent": 0,
                "min_ready_sec": 0,
                "minimal_action": "REPLACE",
                "type": "OPPORTUNISTIC"
              }
            ],
            "version": [
              {
                "instance_template": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/instanceTemplates/splunk-shc-template-20200626030847824300000002",
                "name": "splunk-shc-mig-version-0",
                "target_size": []
              }
            ],
            "wait_for_instances": false
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_firewall.allow_internal",
            "google_compute_firewall.allow_splunk_web",
            "google_compute_firewall.allow_ssh",
            "google_compute_instance.splunk_cluster_master",
            "google_compute_instance.splunk_deployer",
            "google_compute_instance_template.splunk_shc_template",
            "google_compute_network.vpc_network",
            "google_compute_subnetwork.splunk_subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_subnetwork",
      "name": "splunk_subnet",
      "each": "list",
      "provider": "provider.google",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2020-06-25T20:08:17.763-07:00",
            "description": "",
            "enable_flow_logs": false,
            "fingerprint": "eKC7IOLegAg=",
            "gateway_address": "192.168.0.1",
            "id": "us-central1/splunksubnet",
            "ip_cidr_range": "192.168.0.0/16",
            "log_config": [],
            "name": "splunksubnet",
            "network": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/networks/splunk",
            "private_ip_google_access": false,
            "project": "igbokwe-test",
            "region": "us-central1",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/regions/us-central1/subnetworks/splunksubnet",
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_network.vpc_network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_target_http_proxy",
      "name": "indexer_hec_input_proxy",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2020-06-25T20:09:36.090-07:00",
            "description": "",
            "id": "splunk-idx-hecinput-proxy",
            "name": "splunk-idx-hecinput-proxy",
            "project": "igbokwe-test",
            "proxy_id": 7849972038983276575,
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/targetHttpProxies/splunk-idx-hecinput-proxy",
            "timeouts": null,
            "url_map": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/urlMaps/splunk-idx-hecinput-url-map"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_backend_service.splunk_hec",
            "google_compute_disk.indexer-data-disk",
            "google_compute_firewall.allow_health_checks",
            "google_compute_firewall.allow_internal",
            "google_compute_firewall.allow_splunk_web",
            "google_compute_firewall.allow_ssh",
            "google_compute_health_check.splunk_hec",
            "google_compute_image.indexer-data-disk-image",
            "google_compute_instance.splunk_cluster_master",
            "google_compute_instance_template.splunk_idx_template-localssd",
            "google_compute_instance_template.splunk_idx_template-pd",
            "google_compute_network.vpc_network",
            "google_compute_region_instance_group_manager.indexer_cluster",
            "google_compute_subnetwork.splunk_subnet",
            "google_compute_url_map.indexer_hec_input_url_map"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_target_http_proxy",
      "name": "search_head_cluster_proxy",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2020-06-25T20:09:44.314-07:00",
            "description": "",
            "id": "splunk-shc-splunkweb-proxy",
            "name": "splunk-shc-splunkweb-proxy",
            "project": "igbokwe-test",
            "proxy_id": 1307338414413633559,
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/targetHttpProxies/splunk-shc-splunkweb-proxy",
            "timeouts": null,
            "url_map": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/urlMaps/splunk-shc-splunkweb-url-map"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_backend_service.default",
            "google_compute_firewall.allow_health_checks",
            "google_compute_firewall.allow_internal",
            "google_compute_firewall.allow_splunk_web",
            "google_compute_firewall.allow_ssh",
            "google_compute_health_check.default",
            "google_compute_instance.splunk_cluster_master",
            "google_compute_instance.splunk_deployer",
            "google_compute_instance_template.splunk_shc_template",
            "google_compute_network.vpc_network",
            "google_compute_region_instance_group_manager.search_head_cluster",
            "google_compute_subnetwork.splunk_subnet",
            "google_compute_url_map.search_head_cluster_url_map"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_url_map",
      "name": "indexer_hec_input_url_map",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2020-06-25T20:09:32.850-07:00",
            "default_service": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/backendServices/idx-splunk-hec",
            "description": "",
            "fingerprint": "NgF9bf33d04=",
            "host_rule": [],
            "id": "splunk-idx-hecinput-url-map",
            "map_id": 6351467638855096323,
            "name": "splunk-idx-hecinput-url-map",
            "path_matcher": [],
            "project": "igbokwe-test",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/urlMaps/splunk-idx-hecinput-url-map",
            "test": [],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_backend_service.splunk_hec",
            "google_compute_disk.indexer-data-disk",
            "google_compute_firewall.allow_health_checks",
            "google_compute_firewall.allow_internal",
            "google_compute_firewall.allow_splunk_web",
            "google_compute_firewall.allow_ssh",
            "google_compute_health_check.splunk_hec",
            "google_compute_image.indexer-data-disk-image",
            "google_compute_instance.splunk_cluster_master",
            "google_compute_instance_template.splunk_idx_template-localssd",
            "google_compute_instance_template.splunk_idx_template-pd",
            "google_compute_network.vpc_network",
            "google_compute_region_instance_group_manager.indexer_cluster",
            "google_compute_subnetwork.splunk_subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_url_map",
      "name": "search_head_cluster_url_map",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2020-06-25T20:09:41.016-07:00",
            "default_service": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/backendServices/shc-splunkweb",
            "description": "",
            "fingerprint": "ytsm4SfOO3s=",
            "host_rule": [],
            "id": "splunk-shc-splunkweb-url-map",
            "map_id": 7283246813603747866,
            "name": "splunk-shc-splunkweb-url-map",
            "path_matcher": [],
            "project": "igbokwe-test",
            "self_link": "https://www.googleapis.com/compute/v1/projects/igbokwe-test/global/urlMaps/splunk-shc-splunkweb-url-map",
            "test": [],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_address.splunk_cluster_master_ip",
            "google_compute_address.splunk_deployer_ip",
            "google_compute_backend_service.default",
            "google_compute_firewall.allow_health_checks",
            "google_compute_firewall.allow_internal",
            "google_compute_firewall.allow_splunk_web",
            "google_compute_firewall.allow_ssh",
            "google_compute_health_check.default",
            "google_compute_instance.splunk_cluster_master",
            "google_compute_instance.splunk_deployer",
            "google_compute_instance_template.splunk_shc_template",
            "google_compute_network.vpc_network",
            "google_compute_region_instance_group_manager.search_head_cluster",
            "google_compute_subnetwork.splunk_subnet"
          ]
        }
      ]
    },
    {
      "module": "module.shell_output_install_progress",
      "mode": "managed",
      "type": "null_resource",
      "name": "contents",
      "provider": "module.shell_output_install_progress.provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1029089619284679621",
            "triggers": {
              "exitstatus": "0",
              "stderr": "Updated [https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-b/instances/splunk-idx-z67d]. Updated [https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-c/instances/splunk-cluster-master]. Updated [https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-c/instances/splunk-deployer]. Updated [https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-c/instances/splunk-idx-b2rc]. Updated [https://www.googleapis.com/compute/v1/projects/igbokwe-test/zones/us-central1-f/instances/splunk-idx-b8bp].",
              "stdout": "",
              "string": ""
            }
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.shell_output_install_progress.null_resource.shell",
            "module.shell_output_install_progress.null_resource.start"
          ]
        }
      ]
    },
    {
      "module": "module.shell_output_token",
      "mode": "managed",
      "type": "null_resource",
      "name": "contents",
      "provider": "module.shell_output_token.provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1029089619284679621",
            "triggers": {
              "exitstatus": "0",
              "stderr": "",
              "stdout": "5086ab99-6210-4b24-bf8c-c47723229722",
              "string": ""
            }
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.shell_output_token.null_resource.shell",
            "module.shell_output_token.null_resource.start"
          ]
        }
      ]
    },
    {
      "module": "module.shell_output_install_progress",
      "mode": "managed",
      "type": "null_resource",
      "name": "shell",
      "provider": "module.shell_output_install_progress.provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4920033252967663688",
            "triggers": {
              "string": ""
            }
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.shell_output_install_progress.null_resource.start"
          ]
        }
      ]
    },
    {
      "module": "module.shell_output_token",
      "mode": "managed",
      "type": "null_resource",
      "name": "shell",
      "provider": "module.shell_output_token.provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4920033252967663688",
            "triggers": {
              "string": ""
            }
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.shell_output_token.null_resource.start"
          ]
        }
      ]
    },
    {
      "module": "module.shell_output_install_progress",
      "mode": "managed",
      "type": "null_resource",
      "name": "start",
      "provider": "module.shell_output_install_progress.provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1944006086828605583",
            "triggers": {
              "depends_id": ""
            }
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.shell_output_token",
      "mode": "managed",
      "type": "null_resource",
      "name": "start",
      "provider": "module.shell_output_token.provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1944006086828605583",
            "triggers": {
              "depends_id": ""
            }
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
